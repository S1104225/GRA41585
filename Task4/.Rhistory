# This plot compares sales at the store 109 and the synthetic store
# Sales are matched decently while the sales for the synthetic store are less volatile and not always match the actual sales
# However we can still see that the sales of p2 dropped after treatment
path.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("P2 Sales"),
Xlab = c("Week"),
Ylim = c(200,400),
Main = 'Comparison between stores in terms of Product 2',
Legend = c("Store 109","Synthetic store 109"))
# This plot exhibits a gap between the store 109 and synthetic store. It complements the previous graph
gaps.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("Gap in P2 Sales"),
Xlab = c("Week"),
Ylim = c(-75,75),
Main = 'Gaps in sales between stores in terms of Product 2')
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
# This plot compares sales at the store 109 and the synthetic store
# Sales are matched decently while the sales for the synthetic store are less volatile and not always match the actual sales
# However we can still see that the sales of p2 dropped after treatment
path.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("P2 Sales"),
Xlab = c("Week"),
Ylim = c(200,400),
Main = 'Comparison between stores in terms of Product 2',
Legend = c("Store 109","Synthetic store 109"))
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# P2
# Create a preparatory dataset for the subsequent synthetic control analysis
data.dataprep.p2 <- dataprep(
foo = data,
dependent = "p2sales",
unit.variable = "storeNum",
time.predictors.prior = 1:77,
special.predictors = list(
list("p2price", 1:77, "mean"),
list("p2prom", 1:77, "mean"),
list("compind", 1:77, "mean"),
list("storesize", 1:77, "mean"),
list("citysize", 1:77, "mean"),
list("p2sales", 5, "mean"),
list("p2sales", 13, "mean"),
list("p2sales", 17, "mean"),
list("p2sales", 21, "mean"),
list("p2sales", 30, "mean"),
list("p2sales", 39, "mean"),
list("p2sales", 46, "mean"),
list("p2sales", 52, "mean"),
list("p2sales", 64, "mean"),
list("p2sales", 66, "mean"),
list("p2sales", 71, "mean"),
list("p2sales", 75, "mean")),
time.variable = "Weekind",
treatment.identifier = 109,
controls.identifier = c(101:108, 110:121),
time.optimize.ssr = 1:77,
time.plot = 1:104)
# Prepare the data for a comparative plot
data.synth.plot.p2 <- data %>%
select(storeNum, Weekind, p2sales) %>%
mutate(treated = storeNum==109) %>%
group_by(treated, Weekind) %>%
summarize_all(mean, .groups = "drop")
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
synth.out.p2 = synth(data.prep.obj = data.dataprep.p2)
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# P2
# Create a preparatory dataset for the subsequent synthetic control analysis
data.dataprep.p2 <- dataprep(
foo = data,
dependent = "p2sales",
unit.variable = "storeNum",
time.predictors.prior = 1:77,
special.predictors = list(
list("p2price", 1:77, "mean"),
list("p2prom", 1:77, "mean"),
list("compind", 1:77, "mean"),
list("storesize", 1:77, "mean"),
list("citysize", 1:77, "mean"),
list("p2sales", 5, "mean"),
list("p2sales", 13, "mean"),
list("p2sales", 21, "mean"),
list("p2sales", 39, "mean"),
list("p2sales", 46, "mean"),
list("p2sales", 52, "mean"),
list("p2sales", 64, "mean"),
list("p2sales", 66, "mean"),
list("p2sales", 71, "mean"),
list("p2sales", 75, "mean")),
time.variable = "Weekind",
treatment.identifier = 109,
controls.identifier = c(101:108, 110:121),
time.optimize.ssr = 1:77,
time.plot = 1:104)
# Prepare the data for a comparative plot
data.synth.plot.p2 <- data %>%
select(storeNum, Weekind, p2sales) %>%
mutate(treated = storeNum==109) %>%
group_by(treated, Weekind) %>%
summarize_all(mean, .groups = "drop")
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
synth.out.p2 = synth(data.prep.obj = data.dataprep.p2)
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# This plot compares sales at the store 109 and the synthetic store
# Sales are matched pretty well before the treatment, however, after the treatment sales of p1 have increased
path.plot(synth.res = synth.out.p1,
dataprep.res = data.dataprep.p1,
tr.intake = 77,
Ylab = c("P1 Sales"),
Xlab = c("Week"),
Ylim = c(200,400),
Main = 'Comparison between stores in terms of Product 1',
Legend = c("Store 109","Synthetic store 109"))
# This plot exhibits a gap between the store 109 and synthetic store. It complements the previous graph
gaps.plot(synth.res = synth.out.p1,
dataprep.res = data.dataprep.p1,
tr.intake = 77,
Ylab = c("Gap in P1 Sales"),
Xlab = c("Week"),
Ylim = c(-75,75),
Main = 'Gaps in sales between stores in terms of Product 1')
# This plot compares sales at the store 109 and the synthetic store
# Sales are matched decently while the sales for the synthetic store are less volatile and not always match the actual sales
# However we can still see that the sales of p2 dropped after treatment
path.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("P2 Sales"),
Xlab = c("Week"),
Ylim = c(200,400),
Main = 'Comparison between stores in terms of Product 2',
Legend = c("Store 109","Synthetic store 109"))
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# P2
# Create a preparatory dataset for the subsequent synthetic control analysis
data.dataprep.p2 <- dataprep(
foo = data,
dependent = "p2sales",
unit.variable = "storeNum",
time.predictors.prior = 1:77,
special.predictors = list(
list("p2price", 1:77, "mean"),
list("p2prom", 1:77, "mean"),
list("compind", 1:77, "mean"),
list("storesize", 1:77, "mean"),
list("citysize", 1:77, "mean"),
list("p2sales", 1, "mean"),
list("p2sales", 5, "mean"),
list("p2sales", 13, "mean"),
list("p2sales", 21, "mean"),
list("p2sales", 39, "mean"),
list("p2sales", 46, "mean"),
list("p2sales", 52, "mean"),
list("p2sales", 64, "mean"),
list("p2sales", 66, "mean"),
list("p2sales", 71, "mean"),
list("p2sales", 75, "mean")),
time.variable = "Weekind",
treatment.identifier = 109,
controls.identifier = c(101:108, 110:121),
time.optimize.ssr = 1:77,
time.plot = 1:104)
# Prepare the data for a comparative plot
data.synth.plot.p2 <- data %>%
select(storeNum, Weekind, p2sales) %>%
mutate(treated = storeNum==109) %>%
group_by(treated, Weekind) %>%
summarize_all(mean, .groups = "drop")
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
synth.out.p2 = synth(data.prep.obj = data.dataprep.p2)
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# This plot compares sales at the store 109 and the synthetic store
# Sales are matched decently while the sales for the synthetic store are less volatile and not always match the actual sales
# However we can still see that the sales of p2 dropped after treatment
path.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("P2 Sales"),
Xlab = c("Week"),
Ylim = c(200,400),
Main = 'Comparison between stores in terms of Product 2',
Legend = c("Store 109","Synthetic store 109"))
# This plot exhibits a gap between the store 109 and synthetic store. It complements the previous graph
gaps.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("Gap in P2 Sales"),
Xlab = c("Week"),
Ylim = c(-75,75),
Main = 'Gaps in sales between stores in terms of Product 2')
# P2
# Create a preparatory dataset for the subsequent synthetic control analysis
data.dataprep.p2 <- dataprep(
foo = data,
dependent = "p2sales",
unit.variable = "storeNum",
time.predictors.prior = 1:77,
special.predictors = list(
list("p2price", 1:77, "mean"),
list("p2prom", 1:77, "mean"),
list("compind", 1:77, "mean"),
list("storesize", 1:77, "mean"),
list("citysize", 1:77, "mean"),
list("p2sales", 1, "mean"),
list("p2sales", 5, "mean"),
list("p2sales", 13, "mean"),
list("p2sales", 21, "mean"),
list("p2sales", 30, "mean"),
list("p2sales", 39, "mean"),
list("p2sales", 46, "mean"),
list("p2sales", 52, "mean"),
list("p2sales", 64, "mean"),
list("p2sales", 66, "mean"),
list("p2sales", 71, "mean"),
list("p2sales", 75, "mean")),
time.variable = "Weekind",
treatment.identifier = 109,
controls.identifier = c(101:108, 110:121),
time.optimize.ssr = 1:77,
time.plot = 1:104)
# Prepare the data for a comparative plot
data.synth.plot.p2 <- data %>%
select(storeNum, Weekind, p2sales) %>%
mutate(treated = storeNum==109) %>%
group_by(treated, Weekind) %>%
summarize_all(mean, .groups = "drop")
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
synth.out.p2 = synth(data.prep.obj = data.dataprep.p2)
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# This plot exhibits a gap between the store 109 and synthetic store. It complements the previous graph
gaps.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("Gap in P2 Sales"),
Xlab = c("Week"),
Ylim = c(-75,75),
Main = 'Gaps in sales between stores in terms of Product 2')
# P2
# Create a preparatory dataset for the subsequent synthetic control analysis
data.dataprep.p2 <- dataprep(
foo = data,
dependent = "p2sales",
unit.variable = "storeNum",
time.predictors.prior = 1:77,
special.predictors = list(
list("p2price", 1:77, "mean"),
list("p2prom", 1:77, "mean"),
list("compind", 1:77, "mean"),
list("storesize", 1:77, "mean"),
list("citysize", 1:77, "mean"),
list("p2sales", 5, "mean"),
list("p2sales", 13, "mean"),
list("p2sales", 21, "mean"),
list("p2sales", 39, "mean"),
list("p2sales", 46, "mean"),
list("p2sales", 52, "mean"),
list("p2sales", 64, "mean"),
list("p2sales", 66, "mean"),
list("p2sales", 71, "mean"),
list("p2sales", 75, "mean")),
time.variable = "Weekind",
treatment.identifier = 109,
controls.identifier = c(101:108, 110:121),
time.optimize.ssr = 1:77,
time.plot = 1:104)
# Prepare the data for a comparative plot
data.synth.plot.p2 <- data %>%
select(storeNum, Weekind, p2sales) %>%
mutate(treated = storeNum==109) %>%
group_by(treated, Weekind) %>%
summarize_all(mean, .groups = "drop")
# Compare treated (109) and untreaded shops in terms of p2 sales
# We can see that the sales of p2 dropped after treatment while the sales of untreated shops stayed the same
ggplot(data.synth.plot.p2, aes(x = Weekind, y = p2sales, color = treated, group = treated)) +
geom_line(aes(color = treated), linetype = "solid", linewidth = 0.5) +
scale_color_manual(values = c("red", "blue")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") +
labs(title = "P2 Sales: Treated vs. Untreated (Week 1-Week 104)",
x = "Week",
y = "P2 Sales",
color = "Treatment Status") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
synth.out.p2 = synth(data.prep.obj = data.dataprep.p2)
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# This plot exhibits a gap between the store 109 and synthetic store. It complements the previous graph
gaps.plot(synth.res = synth.out.p2,
dataprep.res = data.dataprep.p2,
tr.intake = 77,
Ylab = c("Gap in P2 Sales"),
Xlab = c("Week"),
Ylim = c(-75,75),
Main = 'Gaps in sales between stores in terms of Product 2')
sum(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2)$tab.w$w.weights > 0.01) # 9 stores are used to construct the synthetic store
sum(synth.tab(dataprep.res = data.dataprep.p1, synth.res = synth.out.p1)$tab.w$w.weights > 0.01) # 7 stores are used to construct the synthetic store
# ATET is 31.34232
diff.sales.p1 <- data.dataprep.p1$Y1plot - (data.dataprep.p1$Y0plot %*% synth.out.p1$solution.w)
post.dum <- 1:104>77
mean(diff.sales.p1[post.dum])
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
# ATET is -29.69845
diff.sales.p2 <- data.dataprep.p2$Y1plot - (data.dataprep.p2$Y0plot %*% synth.out.p2$solution.w)
post.dum <- 1:104>77
mean(diff.sales.p2[post.dum])
sc.out.p1   = sc_estimate(dataprep.SDID.p1$Y, dataprep.SDID.p1$N0, dataprep.SDID.p1$T0)
did.out.p1  = did_estimate(dataprep.SDID.p1$Y, dataprep.SDID.p1$N0, dataprep.SDID.p1$T0)
estimates = list(did.out.p1, sc.out.p1, sdid.out.p1)
names(estimates) = c('Diff-in-Diff', 'Synthetic Control', 'Synthetic Diff-in-Diff')
print(unlist(estimates))
# Run synthetic DID approach
sdid.out.p2 <- synthdid_estimate(dataprep.SDID.p2$Y, dataprep.SDID.p2$N0, dataprep.SDID.p2$T0)
# Show main results
summary(sdid.out.p2)
# P2
# Prepare data further for the analysis
dataprep.SDID.p2 <- panel.matrices(data, unit = 'storeNum', time = 'Weekind', outcome = 'p2sales', treatment = 'treated', treated.last = T)
dataprep.SDID.p2
# Run synthetic DID approach
sdid.out.p2 <- synthdid_estimate(dataprep.SDID.p2$Y, dataprep.SDID.p2$N0, dataprep.SDID.p2$T0)
sdid.out.p2
summary(sdid.out.p2)
summary(sdid.out.p1)
summary(sdid.out.p1)
# Show main results
summary(sdid.out.p2)
plot(data$Weekind, data$p1price)
plot(data$Weekind, data$p1price, type='l')
data$p1price
ggplot(data.treated) +
geom_line(aes(x = Weekind, y = p1price, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p2price, color = "P2 Sales")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
theme_classic()
View(data)
View(data)
ggplot(data.treated) +
geom_line(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
theme_classic()
ggplot(data.treated) +
geom_line(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
scale_y_continuous(
name = "Temperature (°C)",
sec.axis = sec_axis(~ . * 10, name = "Rainfall (mm)")  # Transform secondary axis
) +
theme_classic()
ggplot(data.treated) +
geom_col(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
scale_y_continuous(
name = "Temperature (°C)",
sec.axis = sec_axis(~ . * 10, name = "Rainfall (mm)")  # Transform secondary axis
) +
theme_classic()
ggplot(data.treated) +
geom_col(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
scale_y_continuous(
name = "Temperature (°C)",
sec.axis = sec_axis(~ . / 100, name = "Rainfall (mm)")  # Transform secondary axis
) +
theme_classic()
ggplot(data.treated) +
geom_line(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
scale_y_continuous(
name = "Temperature (°C)",
sec.axis = sec_axis(~ . / 100, name = "Rainfall (mm)")  # Transform secondary axis
) +
theme_classic()
ggplot(data.treated) +
geom_line(aes(x = Weekind, y = p1sales, color = "P1 Sales")) +
geom_line(aes(x = Weekind, y = p1prom * 100, color = "P1 Prom")) +
geom_vline(xintercept = 78, linetype = "dotted", color = "black") + # Adding the vertical line
labs(x = "Observed weeks", y = "Sales", color = "Legend") +
scale_y_continuous(
name = "Temperature (°C)",
sec.axis = sec_axis(~ . / 100, name = "Rainfall (mm)")  # Transform secondary axis
) +
theme_classic()
plot(sdid.out.p2) +
labs(title = "SDID of Product 2 Sales: Treated vs. Synthetic",
x = "Week",
y = "P2 Sales") +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
)
cor(data$p1sales, data$p1prom)
cor(data.treated$p2sales, data.treated$p2prom)
cor(data.treated$p1sales, data.treated$p1prom)
sum(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2)$tab.w$w.weights > 0.01) # 9 stores are used to construct the synthetic store
# The MSE is much bigger because the sales data for P2 is much more volatile
print(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2))
print(synth.tab(dataprep.res = data.dataprep.p1, synth.res = synth.out.p1))
mean(diff.sales.p1[post.dum])
sum(synth.tab(dataprep.res = data.dataprep.p1, synth.res = synth.out.p1)$tab.w$w.weights > 0.01) # 7 stores are used to construct the synthetic store
mean(diff.sales.p2[post.dum])
sum(synth.tab(dataprep.res = data.dataprep.p2, synth.res = synth.out.p2)$tab.w$w.weights > 0.01) # 9 stores are used to construct the synthetic store
